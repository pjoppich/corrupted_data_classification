{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of autoencoder","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"HB08oR0WoGxP","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1600781121441,"user_tz":-120,"elapsed":19547,"user":{"displayName":"Philipp Joppich","photoUrl":"","userId":"13880711118287505350"}},"outputId":"55d813b6-7cc0-42e8-f8e2-e098cbb2c3e8"},"source":["%matplotlib inline\n","\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import random\n","import sklearn as sk\n","from sklearn import decomposition\n","import numpy as np\n","\n","# Colab and system related\n","import os\n","import time\n","from google.colab import drive\n","import sys\n","drive.mount('/content/drive')\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"XToyHlvuoNp7","colab":{"base_uri":"https://localhost:8080/","height":156},"executionInfo":{"status":"ok","timestamp":1600781122395,"user_tz":-120,"elapsed":20497,"user":{"displayName":"Philipp Joppich","photoUrl":"","userId":"13880711118287505350"}},"outputId":"1b790e86-403a-4d53-c6fa-8eeadc1db579"},"source":["# Load MNIST Dataset\n","mnist = tf.keras.datasets.fashion_mnist\n","(XTrain, YTrain), (XTest, YTest) = mnist.load_data()\n","XTrain, XTest = XTrain / 255.0, XTest / 255.0\n","# Cut out last 100 Training images for comparison\n","XTrain = XTrain[0:-100]\n","YTrain = YTrain[0:-100]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n","32768/29515 [=================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n","26427392/26421880 [==============================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n","8192/5148 [===============================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n","4423680/4422102 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AIcg2c9SoP5t"},"source":["# Reshape Xtrain and XTest to 1x784 Vectors instead of 28x28 arrays\n","XTrain = XTrain.reshape((len(XTrain), np.prod(XTrain.shape[1:])))\n","XTest = XTest.reshape((len(XTest), np.prod(XTest.shape[1:])))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dqq8dnNBoRLH"},"source":["# Build Autoencoder\n","def autoencoder_shallow(latent_space_size):\n","    Input = tf.keras.layers.Input(shape=784)\n","    h1 = tf.keras.layers.Dense(512, activation='elu')(Input)\n","    encoded = tf.keras.layers.Dense(latent_space_size, activation='linear')(h1)\n","    # Decoder\n","    Decoder_Input = tf.keras.layers.Input(shape=latent_space_size)  # Input for Decoder\n","    h3 = tf.keras.layers.Dense(512, activation='elu')(Decoder_Input)\n","    decoded = tf.keras.layers.Dense(784, activation='sigmoid')(h3)\n","    # Decouple Encoder and Decoder from overall model\n","    Encoder = tf.keras.Model(Input, encoded)\n","    Decoder = tf.keras.Model(Decoder_Input, decoded)\n","    decoded = Decoder(encoded)\n","\n","    model = tf.keras.Model(Input, [decoded, encoded])\n","    return Encoder, Decoder, model\n","    \n","def autoencoder_deep(latent_space_size):\n","    Input = tf.keras.layers.Input(shape=784)\n","    h1 = tf.keras.layers.Dense(512, activation='relu')(Input)\n","    h2 = tf.keras.layers.Dense(256, activation='relu')(h1)\n","    h3 = tf.keras.layers.Dense(128, activation='relu')(h2)\n","    encoded = tf.keras.layers.Dense(latent_space_size, activation='linear')(h3)\n","    # Decoder\n","    Decoder_Input = tf.keras.layers.Input(shape=latent_space_size)  # Input for Decoder\n","    h5 = tf.keras.layers.Dense(128, activation='relu')(Decoder_Input)\n","    h6 = tf.keras.layers.Dense(256, activation='relu')(h5)\n","    h7 = tf.keras.layers.Dense(512, activation='relu')(h6)\n","    decoded = tf.keras.layers.Dense(784, activation='sigmoid')(h7)\n","\n","\n","    # Decouple Encoder and Decoder from overall model\n","    Encoder = tf.keras.Model(Input, encoded)\n","    Decoder = tf.keras.Model(Decoder_Input, decoded)\n","    decoded = Decoder(encoded)\n","    model = tf.keras.Model(Input, [decoded, encoded])\n","    return Encoder, Decoder, model\n","\n","\n","Encoder, Decoder, model = autoencoder_deep(10)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"i3KU1uSMoYpu"},"source":["# Loss Function for Reconstruction of images (i.e. overall Autoencoder)\n","def loss_fn_AE(y_true, y_pred):\n","    # y_pred = tf.nn.elu(y_pred) * tf.nn.softplus(y_pred)\n","    # return tf.losses.categorical_crossentropy(y_true, y_pred)\n","    # y_pred = tf.nn.softmax(y_pred)\n","    return  tf.losses.categorical_crossentropy(y_true,y_pred)\n","    \n","# Loss Function for Classification of Images in latent space\n","def loss_fn_Encoder(y_true, y_pred):\n","    y_pred = tf.nn.softmax(y_pred)\n","    return tf.losses.sparse_categorical_crossentropy(y_true, y_pred)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Xt8y9jhEoeRY","colab":{"base_uri":"https://localhost:8080/","height":541},"executionInfo":{"status":"ok","timestamp":1600781362851,"user_tz":-120,"elapsed":260940,"user":{"displayName":"Philipp Joppich","photoUrl":"","userId":"13880711118287505350"}},"outputId":"fd4dfa76-7449-4f91-8df3-75d067eb7a81"},"source":["# Training Options\n","model.compile(optimizer='adam',\n","              #loss=[loss_fn_AE, loss_fn_Encoder],\n","              loss=[loss_fn_AE, loss_fn_Encoder], \n","              metrics=['accuracy'])\n","\n","# Training and Testing\n","model.fit(XTrain, [XTrain, YTrain], epochs=10)\n","model.evaluate(XTest, [XTest, YTest], verbose=2)\n","\n","# Save trained Decoder and trained Encoder\n","Decoder.save('drive/My Drive/masterthesis/modeling/NNs/Fashion-MNIST/pretrained_supervised_ae10/Decoder/', save_format='tf')\n","Encoder.save('drive/My Drive/masterthesis/modeling/NNs/Fashion-MNIST/pretrained_supervised_ae10/Encoder/', save_format='tf')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1354.6429 - functional_3_loss: 1353.9124 - dense_3_loss: 0.7334 - functional_3_accuracy: 0.0049 - dense_3_accuracy: 0.7485\n","Epoch 2/10\n","1872/1872 [==============================] - 24s 13ms/step - loss: 1345.0903 - functional_3_loss: 1344.5491 - dense_3_loss: 0.5400 - functional_3_accuracy: 0.0051 - dense_3_accuracy: 0.8125\n","Epoch 3/10\n","1872/1872 [==============================] - 24s 13ms/step - loss: 1343.0771 - functional_3_loss: 1342.5956 - dense_3_loss: 0.4815 - functional_3_accuracy: 0.0076 - dense_3_accuracy: 0.8342\n","Epoch 4/10\n","1872/1872 [==============================] - 24s 13ms/step - loss: 1341.9906 - functional_3_loss: 1341.5322 - dense_3_loss: 0.4592 - functional_3_accuracy: 0.0087 - dense_3_accuracy: 0.8432\n","Epoch 5/10\n","1872/1872 [==============================] - 24s 13ms/step - loss: 1341.2395 - functional_3_loss: 1340.7965 - dense_3_loss: 0.4426 - functional_3_accuracy: 0.0092 - dense_3_accuracy: 0.8487\n","Epoch 6/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1340.7693 - functional_3_loss: 1340.3380 - dense_3_loss: 0.4319 - functional_3_accuracy: 0.0096 - dense_3_accuracy: 0.8517\n","Epoch 7/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1340.4117 - functional_3_loss: 1339.9913 - dense_3_loss: 0.4209 - functional_3_accuracy: 0.0107 - dense_3_accuracy: 0.8553\n","Epoch 8/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1340.0856 - functional_3_loss: 1339.6718 - dense_3_loss: 0.4132 - functional_3_accuracy: 0.0112 - dense_3_accuracy: 0.8593\n","Epoch 9/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1339.8184 - functional_3_loss: 1339.4126 - dense_3_loss: 0.4055 - functional_3_accuracy: 0.0115 - dense_3_accuracy: 0.8614\n","Epoch 10/10\n","1872/1872 [==============================] - 23s 12ms/step - loss: 1339.6021 - functional_3_loss: 1339.2029 - dense_3_loss: 0.4001 - functional_3_accuracy: 0.0113 - dense_3_accuracy: 0.8626\n","313/313 - 1s - loss: 1345.1121 - functional_3_loss: 1344.6670 - dense_3_loss: 0.4454 - functional_3_accuracy: 0.0119 - dense_3_accuracy: 0.8477\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Model.state_updates (from tensorflow.python.keras.engine.training) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This property should not be used in TensorFlow 2.0, as updates are applied automatically.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/tracking/tracking.py:111: Layer.updates (from tensorflow.python.keras.engine.base_layer) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","This property should not be used in TensorFlow 2.0, as updates are applied automatically.\n","INFO:tensorflow:Assets written to: drive/My Drive/masterthesis/modeling/NNs/Fashion-MNIST/pretrained_supervised_ae10/Decoder/assets\n","INFO:tensorflow:Assets written to: drive/My Drive/masterthesis/modeling/NNs/Fashion-MNIST/pretrained_supervised_ae10/Encoder/assets\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"LFV7-oT3ojqn","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1600781363787,"user_tz":-120,"elapsed":261869,"user":{"displayName":"Philipp Joppich","photoUrl":"","userId":"13880711118287505350"}},"outputId":"a208102a-69ba-4a84-ef5d-0162e451510c"},"source":["def plot_pca(Encoder, input_data):\n","    # Get latent space representation (predict samples up to 'bottleneck')\n","    hidden_rep = Encoder.predict(input_data)\n","\n","    # For visualization, compute PCA of latent space\n","    # pca = sk.decomposition.KernelPCA(n_components=10, kernel='linear')\n","    pca = sk.decomposition.PCA(n_components=10)\n","    principalComponents = pca.fit_transform(hidden_rep)\n","    labels = np.linspace(0, 9, 10)\n","\n","    fig = plt.figure()\n","    ax = fig.add_subplot(111)#, projection='3d')\n","    digits = range(0, 10, 1)\n","\n","    # Plot 3 strongest PCs\n","    for digit in digits:\n","        PC1 = principalComponents[np.where(YTest == digit), 0]\n","        PC2 = principalComponents[np.where(YTest == digit), 1]\n","        #PC3 = principalComponents[np.where(YTest == digit), 2]\n","\n","        plot_indices = random.sample(range(0, len(PC1.T)), round(len(PC1.T) / 1))\n","        ax.scatter(PC1[:, plot_indices],\n","                   PC2[:, plot_indices])\n","                   #PC3[:, plot_indices], label=digit)\n","    plt.legend()\n","\n","\n","plot_pca(Encoder, XTest)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["No handles with labels found to put in legend.\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"LUhpbTpXomV4","colab":{"base_uri":"https://localhost:8080/","height":334},"executionInfo":{"status":"ok","timestamp":1600781366923,"user_tz":-120,"elapsed":264999,"user":{"displayName":"Philipp Joppich","photoUrl":"","userId":"13880711118287505350"}},"outputId":"e0fc2f1b-f345-41c6-f438-861ac4a16b93"},"source":["def plot_reconstruction(Encoder, model, input_data, input_data_labels):\n","    # Plotting reconstructions through autoencoder\n","    predicted_img = model.predict(input_data)\n","    predicted_img = np.array(predicted_img[0][:][:])\n","    print(len(input_data))\n","    random_image_indices = random.sample(range(len(input_data)), 18)\n","\n","    fig, ax = plt.subplots(18, 2)\n","    for i in range(1, 19):\n","        if i % 2 != 0:\n","            plt.subplot(9, 2, i)\n","            plt.imshow(np.reshape(input_data[random_image_indices[i], :], [28, 28]), cmap='gray')\n","            ax = plt.gca()\n","            ax.axes.xaxis.set_visible(False)\n","            ax.axes.yaxis.set_ticks([])\n","            plt.ylabel('Labeled: {}'.format(input_data_labels[random_image_indices[i]]), fontsize=10, rotation=0,\n","                       labelpad=35)\n","\n","        if i % 2 == 0:\n","            plt.subplot(9, 2, i)\n","            img = predicted_img[random_image_indices[i - 1]].reshape(28, 28)\n","            plt.imshow(img, cmap='gray')\n","            img = img.reshape(784).tolist()\n","            img_class = Encoder.predict([img[:]])\n","            img_class = np.array(img_class[0][:])\n","            img_class = np.where(img_class == np.amax(img_class))\n","            ax = plt.gca()\n","            ax.axes.xaxis.set_visible(False)\n","            ax.axes.yaxis.set_ticks([])\n","            plt.ylabel('Classified: {}'.format(img_class[0][0]), fontsize=10, rotation=0, labelpad=35)\n","        if i == 1:\n","            plt.title('Original Images')\n","        if i == 2:\n","            plt.title('Generated Images')\n","    plt.tight_layout(pad=0.1)\n","\n","\n","plot_reconstruction(Encoder, model, XTest, YTest)\n","\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["10000\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 18 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"YpnxW8nKaI1v"},"source":[""],"execution_count":null,"outputs":[]}]}